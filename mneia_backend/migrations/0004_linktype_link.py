# Generated by Django 5.1.4 on 2025-01-14 08:06

import uuid

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("mneia_backend", "0003_photograph"),
    ]

    operations = [
        migrations.CreateModel(
            name="LinkType",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_in_mneia", models.DateTimeField(auto_now_add=True)),
                ("updated_in_mneia", models.DateTimeField(auto_now=True)),
                ("mbid", models.IntegerField(null=True, verbose_name="ID")),
                ("child_order", models.IntegerField(default=0, verbose_name="Child Order")),
                ("entity_type0", models.CharField(max_length=50, verbose_name="Entity Type 0")),
                ("entity_type1", models.CharField(max_length=50, verbose_name="Entity Type 1")),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("link_phrase", models.CharField(max_length=255, verbose_name="Link Phrase")),
                ("reverse_link_phrase", models.CharField(max_length=255, verbose_name="Reverse Link Phrase")),
                ("long_link_phrase", models.CharField(max_length=255, verbose_name="Long Link Phrase")),
                ("priority", models.IntegerField(default=0)),
                ("last_updated", models.DateTimeField(auto_now=True, verbose_name="Last Updated")),
                ("is_deprecated", models.BooleanField(default=False, verbose_name="Is Deprecated?")),
                ("has_dates", models.BooleanField(default=True, verbose_name="Has Dates?")),
                ("entity0_cardinality", models.SmallIntegerField(default=0, verbose_name="Entity 0 Cardinality")),
                ("entity1_cardinality", models.SmallIntegerField(default=0, verbose_name="Entity 1 Cardinality")),
                (
                    "parent",
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.PROTECT, to="mneia_backend.linktype"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Link Types",
            },
        ),
        migrations.CreateModel(
            name="Link",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_in_mneia", models.DateTimeField(auto_now_add=True)),
                ("updated_in_mneia", models.DateTimeField(auto_now=True)),
                ("mbid", models.IntegerField(null=True, verbose_name="MBID")),
                ("begin_date_year", models.SmallIntegerField(null=True, verbose_name="Begin Date Year")),
                ("begin_date_month", models.SmallIntegerField(null=True, verbose_name="Begin Date Month")),
                ("begin_date_day", models.SmallIntegerField(null=True, verbose_name="Begin Date Day")),
                ("end_date_year", models.SmallIntegerField(null=True, verbose_name="End Date Year")),
                ("end_date_month", models.SmallIntegerField(null=True, verbose_name="End Date Month")),
                ("end_date_day", models.SmallIntegerField(null=True, verbose_name="End Date Day")),
                ("attribute_count", models.IntegerField(default=0, verbose_name="Attribute Count")),
                ("created", models.DateTimeField(verbose_name="Created")),
                ("ended", models.BooleanField(default=False, verbose_name="Ended?")),
                (
                    "link_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="links",
                        to="mneia_backend.linktype",
                        verbose_name="Type",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Links",
            },
        ),
    ]
